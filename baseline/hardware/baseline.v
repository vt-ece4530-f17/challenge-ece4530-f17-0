
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module baseline(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// LED //////////
	output		     [9:0]		LEDR,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// HPS //////////
	inout 		          		HPS_CONV_USB_N,
	output		    [14:0]		HPS_DDR3_ADDR,
	output		     [2:0]		HPS_DDR3_BA,
	output		          		HPS_DDR3_CAS_N,
	output		          		HPS_DDR3_CKE,
	output		          		HPS_DDR3_CK_N,
	output		          		HPS_DDR3_CK_P,
	output		          		HPS_DDR3_CS_N,
	output		     [3:0]		HPS_DDR3_DM,
	inout 		    [31:0]		HPS_DDR3_DQ,
	inout 		     [3:0]		HPS_DDR3_DQS_N,
	inout 		     [3:0]		HPS_DDR3_DQS_P,
	output		          		HPS_DDR3_ODT,
	output		          		HPS_DDR3_RAS_N,
	output		          		HPS_DDR3_RESET_N,
	input 		          		HPS_DDR3_RZQ,
	output		          		HPS_DDR3_WE_N,
	output		          		HPS_ENET_GTX_CLK,
	inout 		          		HPS_ENET_INT_N,
	output		          		HPS_ENET_MDC,
	inout 		          		HPS_ENET_MDIO,
	input 		          		HPS_ENET_RX_CLK,
	input 		     [3:0]		HPS_ENET_RX_DATA,
	input 		          		HPS_ENET_RX_DV,
	output		     [3:0]		HPS_ENET_TX_DATA,
	output		          		HPS_ENET_TX_EN,
	inout 		     [3:0]		HPS_FLASH_DATA,
	output		          		HPS_FLASH_DCLK,
	output		          		HPS_FLASH_NCSO,
	inout 		     [1:0]		HPS_GPIO,
	inout 		          		HPS_GSENSOR_INT,
	inout 		          		HPS_I2C1_SCLK,
	inout 		          		HPS_I2C1_SDAT,
	inout 		          		HPS_I2C2_SCLK,
	inout 		          		HPS_I2C2_SDAT,
	inout 		          		HPS_I2C_CONTROL,
	inout 		          		HPS_KEY,
	inout 		          		HPS_LED,
	output		          		HPS_SD_CLK,
	inout 		          		HPS_SD_CMD,
	inout 		     [3:0]		HPS_SD_DATA,
	output		          		HPS_SPIM_CLK,
	input 		          		HPS_SPIM_MISO,
	output		          		HPS_SPIM_MOSI,
	inout 		          		HPS_SPIM_SS,
	input 		          		HPS_UART_RX,
	output		          		HPS_UART_TX,
	input 		          		HPS_USB_CLKOUT,
	inout 		     [7:0]		HPS_USB_DATA,
	input 		          		HPS_USB_DIR,
	input 		          		HPS_USB_NXT,
	output		          		HPS_USB_STP
);



//=======================================================
//  REG/WIRE declarations
//=======================================================




//=======================================================
//  Structural coding
//=======================================================

   
   baseline_qsys u0 (
		     .clk_clk                (CLOCK_50),             
		     .reset_reset_n          (1'b1),                 
		     
		     // SDRAM
		     .memory_mem_a           (HPS_DDR3_ADDR),        
		     .memory_mem_ba          (HPS_DDR3_BA),          
		     .memory_mem_ck          (HPS_DDR3_CK_P),        
		     .memory_mem_ck_n        (HPS_DDR3_CK_N),        
		     .memory_mem_cke         (HPS_DDR3_CKE),         
		     .memory_mem_cs_n        (HPS_DDR3_CS_N),        
		     .memory_mem_ras_n       (HPS_DDR3_RAS_N),       
		     .memory_mem_cas_n       (HPS_DDR3_CAS_N),       
		     .memory_mem_we_n        (HPS_DDR3_WE_N),        
		     .memory_mem_reset_n     (HPS_DDR3_RESET_N),     
		     .memory_mem_dq          (HPS_DDR3_DQ),          
		     .memory_mem_dqs         (HPS_DDR3_DQS_P),       
		     .memory_mem_dqs_n       (HPS_DDR3_DQS_N),       
		     .memory_mem_odt         (HPS_DDR3_ODT),         
		     .memory_mem_dm          (HPS_DDR3_DM),          
		     .memory_oct_rzqin       (HPS_DDR3_RZQ),         
		     
		     // LED
		     .led_pio_port_export    (LEDR),                 
		     
		     // SWITCH
		     .switch_pio_port_export (SW),                     
		     
		     // ETHERNET
		     .hps_io_hps_io_emac1_inst_TX_CLK ( HPS_ENET_GTX_CLK),   
		     .hps_io_hps_io_emac1_inst_TXD0   ( HPS_ENET_TX_DATA[0] ),   
		     .hps_io_hps_io_emac1_inst_TXD1   ( HPS_ENET_TX_DATA[1] ),   
		     .hps_io_hps_io_emac1_inst_TXD2   ( HPS_ENET_TX_DATA[2] ),   
		     .hps_io_hps_io_emac1_inst_TXD3   ( HPS_ENET_TX_DATA[3] ),   
		     .hps_io_hps_io_emac1_inst_RXD0   ( HPS_ENET_RX_DATA[0] ),   
		     .hps_io_hps_io_emac1_inst_MDIO   ( HPS_ENET_MDIO ),         
		     .hps_io_hps_io_emac1_inst_MDC    ( HPS_ENET_MDC  ),    
		     .hps_io_hps_io_emac1_inst_RX_CTL ( HPS_ENET_RX_DV),         
		     .hps_io_hps_io_emac1_inst_TX_CTL ( HPS_ENET_TX_EN),         
		     .hps_io_hps_io_emac1_inst_RX_CLK ( HPS_ENET_RX_CLK),        
		     .hps_io_hps_io_emac1_inst_RXD1   ( HPS_ENET_RX_DATA[1] ),   
		     .hps_io_hps_io_emac1_inst_RXD2   ( HPS_ENET_RX_DATA[2] ),   
		     .hps_io_hps_io_emac1_inst_RXD3   ( HPS_ENET_RX_DATA[3] ),    
		     
		     // NVRAM 
		     .hps_io_hps_io_qspi_inst_IO0     ( HPS_FLASH_DATA[0]    ),
		     .hps_io_hps_io_qspi_inst_IO1     ( HPS_FLASH_DATA[1]    ),        
		     .hps_io_hps_io_qspi_inst_IO2     ( HPS_FLASH_DATA[2]    ),        
		     .hps_io_hps_io_qspi_inst_IO3     ( HPS_FLASH_DATA[3]    ),        
		     .hps_io_hps_io_qspi_inst_SS0     ( HPS_FLASH_NCSO    ),           
		     .hps_io_hps_io_qspi_inst_CLK     ( HPS_FLASH_DCLK    ),           
		     
		     // SDMMC
		     .hps_io_hps_io_sdio_inst_CMD     ( HPS_SD_CMD    ),   
		     .hps_io_hps_io_sdio_inst_D0      ( HPS_SD_DATA[0]     ),      
		     .hps_io_hps_io_sdio_inst_D1      ( HPS_SD_DATA[1]     ),      
		     .hps_io_hps_io_sdio_inst_CLK     ( HPS_SD_CLK   ),            
		     .hps_io_hps_io_sdio_inst_D2      ( HPS_SD_DATA[2]     ),      
		     .hps_io_hps_io_sdio_inst_D3      ( HPS_SD_DATA[3]     ),       
        	     
		     // USB
		     .hps_io_hps_io_usb1_inst_D0      ( HPS_USB_DATA[0]    ),   
		     .hps_io_hps_io_usb1_inst_D1      ( HPS_USB_DATA[1]    ),           
		     .hps_io_hps_io_usb1_inst_D2      ( HPS_USB_DATA[2]    ), 		 
		     .hps_io_hps_io_usb1_inst_D3      ( HPS_USB_DATA[3]    ), 		 
		     .hps_io_hps_io_usb1_inst_D4      ( HPS_USB_DATA[4]    ),   	 
		     .hps_io_hps_io_usb1_inst_D5      ( HPS_USB_DATA[5]    ),  	 
		     .hps_io_hps_io_usb1_inst_D6      ( HPS_USB_DATA[6]    ), 		 
		     .hps_io_hps_io_usb1_inst_D7      ( HPS_USB_DATA[7]    ), 		 
		     .hps_io_hps_io_usb1_inst_CLK     ( HPS_USB_CLKOUT    ), 		 
		     .hps_io_hps_io_usb1_inst_STP     ( HPS_USB_STP    ),    		 
		     .hps_io_hps_io_usb1_inst_DIR     ( HPS_USB_DIR    ),   		 
		     .hps_io_hps_io_usb1_inst_NXT     ( HPS_USB_NXT    ),   		 
		     
		     // SPI		
		     .hps_io_hps_io_spim1_inst_CLK    ( HPS_SPIM_CLK  ),   
		     .hps_io_hps_io_spim1_inst_MOSI   ( HPS_SPIM_MOSI ),  	    
		     .hps_io_hps_io_spim1_inst_MISO   ( HPS_SPIM_MISO ),  	    
		     .hps_io_hps_io_spim1_inst_SS0    ( HPS_SPIM_SS ),   	    		  
		     
      		     // UART	
		     .hps_io_hps_io_uart0_inst_RX     ( HPS_UART_RX    ),   
		     .hps_io_hps_io_uart0_inst_TX     ( HPS_UART_TX    ),           
		     
		     // I2C		
		     .hps_io_hps_io_i2c0_inst_SDA     ( HPS_I2C1_SDAT    ),   
		     .hps_io_hps_io_i2c0_inst_SCL     ( HPS_I2C1_SCLK    ),           
		     .hps_io_hps_io_i2c1_inst_SDA     ( HPS_I2C2_SDAT    ),   
		     .hps_io_hps_io_i2c1_inst_SCL     ( HPS_I2C2_SCLK    ),           
		     
		     );
endmodule
